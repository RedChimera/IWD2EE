COPY_EXISTING_REGEXP ~.*\.itm~ ~override~
	READ_LONG 0x18 theitemflags
	PATCH_IF (theitemflags BAND 0x00040000) = 0 BEGIN
		READ_LONG 0x64 headeroffset
		READ_SHORT 0x68 numheaders
		PATCH_IF numheaders > 0 BEGIN
			READ_LONG 0x6A effectoffset
			READ_SHORT (headeroffset + 0x2A) theprojectile
			READ_SHORT (headeroffset + 0x38 * (numheaders - 1) + 0x1E) lastheadernumeffects
			READ_SHORT (headeroffset + 0x38 * (numheaders - 1) + 0x20) lastheaderfirsteffectindex
			numeffects = lastheadernumeffects + lastheaderfirsteffectindex
			offset = effectoffset
			FOR (i = 0; i < numeffects; ++i) BEGIN
				READ_SHORT offset theopcode
				READ_LONG (offset + 0x8) theparameter2
				READ_BYTE (offset + 0xC) thetiming
				PATCH_IF (theopcode = 12 OR (theopcode = 241 AND theparameter2 = 0)) BEGIN
//				PATCH_IF (theopcode = 241 AND theparameter2 = 0) AND thetiming != 3 AND thetiming != 4 BEGIN
					READ_BYTE (offset + 0x4) theparameter1
					READ_SBYTE (offset + 0x1C) thedicenumber
					PATCH_IF thedicenumber < 0 BEGIN
						thedicenumber = 0
					END
					READ_SBYTE (offset + 0x20) thedicesize
					PATCH_IF thedicesize < 0 BEGIN
						thedicesize = 0
					END
					READ_LONG (offset + 0x24) thesavingthrow
					thesavingthrow|=0x10000
					PATCH_IF theopcode = 241 BEGIN
						thesavingthrow|=0x200000
						WRITE_LONG (offset + 0x8) 0x400000
					END
					PATCH_IF theprojectile = 3 OR theprojectile = 8 OR theprojectile = 13 OR theprojectile = 18 OR theprojectile = 22 OR theprojectile = 25 OR theprojectile = 26 OR theprojectile = 28 OR theprojectile = 33 OR theprojectile = 38 OR theprojectile = 40 OR theprojectile = 42 OR theprojectile = 57 OR theprojectile = 64 OR theprojectile = 67 OR theprojectile = 92 OR theprojectile = 94 OR theprojectile = 95 OR theprojectile = 96 OR theprojectile = 97 OR theprojectile = 98 OR theprojectile = 99 OR theprojectile = 100 OR theprojectile = 101 OR theprojectile = 104 OR theprojectile = 107 OR theprojectile = 109 OR theprojectile = 158 OR theprojectile = 159 OR theprojectile = 186 OR theprojectile = 187 OR theprojectile = 190 OR theprojectile = 191 OR theprojectile = 204 OR theprojectile = 205 OR theprojectile = 206 OR theprojectile = 207 OR theprojectile = 209 OR theprojectile = 210 OR theprojectile = 211 OR theprojectile = 212 OR theprojectile = 213 OR theprojectile = 214 OR theprojectile = 215 OR theprojectile = 216 OR theprojectile = 217 OR theprojectile = 235 OR theprojectile = 270 OR theprojectile = 272 OR theprojectile = 274 OR theprojectile = 279 OR theprojectile = 280 OR theprojectile = 282 OR theprojectile = 283 OR theprojectile = 284 OR theprojectile = 286 OR theprojectile = 287 OR theprojectile = 288 OR theprojectile = 296 OR theprojectile = 299 OR theprojectile = 300 OR theprojectile = 301 OR theprojectile = 302 OR theprojectile = 303 OR theprojectile = 304 OR theprojectile = 305 OR theprojectile = 306 OR theprojectile = 308 OR theprojectile = 309 OR theprojectile = 310 OR theprojectile = 311 OR theprojectile = 312 OR theprojectile = 313 OR theprojectile = 315 OR theprojectile = 316 OR theprojectile = 317 OR theprojectile = 318 OR theprojectile = 319 OR theprojectile = 323 OR theprojectile = 335 OR theprojectile = 337 OR theprojectile = 338 OR theprojectile = 340 OR theprojectile = 341 OR theprojectile = 342 OR theprojectile = 343 OR theprojectile = 351 OR theprojectile = 360 OR theprojectile = 362 OR theprojectile = 366 OR theprojectile = 368 OR theprojectile = 369 OR theprojectile = 370 OR theprojectile = 374 OR theprojectile = 377 OR theprojectile = 379 OR theprojectile = 380 OR theprojectile = 381 OR theprojectile = 382 OR theprojectile = 383 OR theprojectile = 384 OR theprojectile = 385 OR theprojectile = 386 BEGIN
						thesavingthrow|=0x4000000
					END
					PATCH_IF (thesavingthrow BAND 0x00000004) > 0 BEGIN
						thesavingthrow&=0xFFFFFFFB
						thesavingthrow|=0x400
					END
					PATCH_IF (thesavingthrow BAND 0x00000008) > 0 BEGIN
						thesavingthrow&=0xFFFFFFF7
						thesavingthrow|=0x800
					END
					PATCH_IF (thesavingthrow BAND 0x00000010) > 0 BEGIN
						thesavingthrow&=0xFFFFFFEF
						thesavingthrow|=0x1000
					END
					WRITE_SHORT offset 500
					WRITE_LONG (offset + 0x4) (theparameter1 + (thedicesize << 8) + (thedicenumber << 16))
					PATCH_IF thetiming = 1 OR thetiming = 9 BEGIN
						WRITE_BYTE (offset + 0xC) 0
						WRITE_LONG (offset + 0xE) 0
					END ELSE PATCH_IF thetiming = 3 OR thetiming = 4 BEGIN
						WRITE_BYTE (offset + 0xC) 3
					END
					WRITE_ASCII (offset + 0x14) ~EXDAMAGE~ #8
					WRITE_LONG (offset + 0x1C) 0
					WRITE_LONG (offset + 0x20) 0
					WRITE_LONG (offset + 0x24) thesavingthrow
				END
				offset = offset + 0x30
			END
		END
	END
	UNLESS ~EXDAMAGE~
	BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING_REGEXP ~.*\.itm~ ~override~
	READ_SHORT 0x68 thenumheaders
	PATCH_IF thenumheaders > 0 BEGIN
		READ_BYTE 0x82 thefirstheadertype
		PATCH_IF thefirstheadertype = 1 OR thefirstheadertype = 2 BEGIN
			LPF ADD_ITEM_EFFECT INT_VAR type=1 opcode=500 target=2 timing=0 special=1 STR_VAR resource=~MEONHIT~ END
			LPF ADD_ITEM_EFFECT INT_VAR type=2 opcode=500 target=2 timing=0 special=2 STR_VAR resource=~MEONHIT~ END
			READ_SHORT 0x1C theitemtype
			READ_ASCII 0x22 theappearance (2)
			offset = 0x82
			FOR (i = 0; i < thenumheaders; ++i) BEGIN
				READ_BYTE offset theheadertype
				READ_SHORT (offset + 0x18) thedicenumber
				READ_SHORT (offset + 0x1C) thedamagetype
				PATCH_IF thedamagetype = 1 OR thedamagetype = 4 BEGIN
					damageeffecttype = 0x100000
				END ELSE PATCH_IF thedamagetype = 2 OR thedamagetype = 9 BEGIN
					damageeffecttype = 0
				END ELSE BEGIN
					damageeffecttype = 0x1000000
				END
				newdamage = 0
				PATCH_IF theitemtype = 16 AND theheadertype = 1 AND (~%theappearance%~ STRING_EQUAL_CASE ~DD~ OR ~%theappearance%~ STRING_EQUAL_CASE ~SS~) BEGIN
					newdamage = 0x20600
				END ELSE PATCH_IF theitemtype = 0 OR theitemtype = 16 OR theitemtype = 19 OR theitemtype = 24 OR theitemtype = 28 OR theitemtype = 44 BEGIN
					newdamage = 0x10600
				END
				PATCH_IF theheadertype = 1 AND thedicenumber > 0 BEGIN
					LPF ADD_ITEM_EFFECT INT_VAR header=(i + 1) type=1 opcode=500 target=2 timing=0 parameter1=newdamage parameter2=damageeffecttype savingthrow=0x1884000 STR_VAR resource=~EXDAMAGE~ END
				END ELSE PATCH_IF theheadertype = 2 AND thedicenumber > 0 BEGIN
					LPF ADD_ITEM_EFFECT INT_VAR header=(i + 1) type=2 opcode=500 target=2 timing=0 parameter1=newdamage parameter2=damageeffecttype savingthrow=0x1884000 STR_VAR resource=~EXDAMAGE~ END
				END
				offset += 0x38
			END
		END
	END
	UNLESS ~MEONHIT~
	BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING_REGEXP ~00FIST\.itm~ ~override~ ~00MFIST.*\.itm~ ~override~ ~CHILLT\.itm~ ~override~ ~DESTRUC\.itm~ ~override~ ~GTOUCH\.itm~ ~override~ ~HARM\.itm~ ~override~ ~ICW[0-9][0-9]\.itm~ ~override~ ~ILW[0-9][0-9]\.itm~ ~override~ ~IMW[0-9][0-9]\.itm~ ~override~ ~ISW[0-9][0-9]\.itm~ ~override~ ~LTOUCH\.itm~ ~override~ ~SHOCKG[0-9][0-9]\.itm~ ~override~ ~SLIVING\.itm~ ~override~ ~SNAKEBI\.itm~ ~override~
	READ_SHORT 0x68 thenumheaders
	PATCH_IF thenumheaders > 0 BEGIN
		READ_BYTE 0x82 thefirstheadertype
		PATCH_IF thefirstheadertype = 1 BEGIN
			LPF ADD_ITEM_EFFECT INT_VAR type=1 opcode=500 target=2 timing=0 parameter2=2001 special=1 STR_VAR resource=~MEEXHIT~ END
		END
	END
	IF_EXISTS
	UNLESS ~MEEXHIT~
	BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING_REGEXP ~.*\.spl~ ~override~
	READ_LONG 0x18 thespellflags
	PATCH_IF (thespellflags BAND 0x00004000) = 0 BEGIN
		READ_LONG 0x64 headeroffset
		READ_SHORT 0x68 numheaders
		READ_LONG 0x6A effectoffset
		READ_SHORT (headeroffset + 0x26) theprojectile
		READ_SHORT (headeroffset + 0x28 * (numheaders - 1) + 0x1E) lastheadernumeffects
		READ_SHORT (headeroffset + 0x28 * (numheaders - 1) + 0x20) lastheaderfirsteffectindex
		numeffects = lastheadernumeffects + lastheaderfirsteffectindex
		offset = effectoffset
		FOR (i = 0; i < numeffects; ++i) BEGIN
			READ_SHORT offset theopcode
			READ_LONG (offset + 0x8) theparameter2
			READ_BYTE (offset + 0xC) thetiming
			PATCH_IF (theopcode = 12 OR (theopcode = 241 AND theparameter2 = 0)) BEGIN
				READ_BYTE (offset + 0x4) theparameter1
				READ_SBYTE (offset + 0x1C) thedicenumber
				PATCH_IF thedicenumber < 0 BEGIN
					thedicenumber = 0
				END
				READ_SBYTE (offset + 0x20) thedicesize
				PATCH_IF thedicesize < 0 BEGIN
					thedicesize = 0
				END
				READ_LONG (offset + 0x24) thesavingthrow
				thesavingthrow|=0x10000
				thesavingthrow|=0x80000
				PATCH_IF theopcode = 241 BEGIN
					thesavingthrow|=0x200000
					WRITE_LONG (offset + 0x8) 0x400000
				END
				PATCH_IF theprojectile = 3 OR theprojectile = 8 OR theprojectile = 13 OR theprojectile = 18 OR theprojectile = 22 OR theprojectile = 25 OR theprojectile = 26 OR theprojectile = 28 OR theprojectile = 33 OR theprojectile = 38 OR theprojectile = 40 OR theprojectile = 42 OR theprojectile = 57 OR theprojectile = 64 OR theprojectile = 67 OR theprojectile = 92 OR theprojectile = 94 OR theprojectile = 95 OR theprojectile = 96 OR theprojectile = 97 OR theprojectile = 98 OR theprojectile = 99 OR theprojectile = 100 OR theprojectile = 101 OR theprojectile = 104 OR theprojectile = 107 OR theprojectile = 109 OR theprojectile = 158 OR theprojectile = 159 OR theprojectile = 186 OR theprojectile = 187 OR theprojectile = 190 OR theprojectile = 191 OR theprojectile = 204 OR theprojectile = 205 OR theprojectile = 206 OR theprojectile = 207 OR theprojectile = 209 OR theprojectile = 210 OR theprojectile = 211 OR theprojectile = 212 OR theprojectile = 213 OR theprojectile = 214 OR theprojectile = 215 OR theprojectile = 216 OR theprojectile = 217 OR theprojectile = 235 OR theprojectile = 270 OR theprojectile = 272 OR theprojectile = 274 OR theprojectile = 279 OR theprojectile = 280 OR theprojectile = 282 OR theprojectile = 283 OR theprojectile = 284 OR theprojectile = 286 OR theprojectile = 287 OR theprojectile = 288 OR theprojectile = 296 OR theprojectile = 299 OR theprojectile = 300 OR theprojectile = 301 OR theprojectile = 302 OR theprojectile = 303 OR theprojectile = 304 OR theprojectile = 305 OR theprojectile = 306 OR theprojectile = 308 OR theprojectile = 309 OR theprojectile = 310 OR theprojectile = 311 OR theprojectile = 312 OR theprojectile = 313 OR theprojectile = 315 OR theprojectile = 316 OR theprojectile = 317 OR theprojectile = 318 OR theprojectile = 319 OR theprojectile = 323 OR theprojectile = 335 OR theprojectile = 337 OR theprojectile = 338 OR theprojectile = 340 OR theprojectile = 341 OR theprojectile = 342 OR theprojectile = 343 OR theprojectile = 351 OR theprojectile = 360 OR theprojectile = 362 OR theprojectile = 366 OR theprojectile = 368 OR theprojectile = 369 OR theprojectile = 370 OR theprojectile = 374 OR theprojectile = 377 OR theprojectile = 379 OR theprojectile = 380 OR theprojectile = 381 OR theprojectile = 382 OR theprojectile = 383 OR theprojectile = 384 OR theprojectile = 385 OR theprojectile = 386 BEGIN
					thesavingthrow|=0x4000000
				END
				PATCH_IF (thesavingthrow BAND 0x00000004) > 0 BEGIN
					thesavingthrow&=0xFFFFFFFB
					thesavingthrow|=0x400
				END
				PATCH_IF (thesavingthrow BAND 0x00000008) > 0 BEGIN
					thesavingthrow&=0xFFFFFFF7
					thesavingthrow|=0x800
				END
				PATCH_IF (thesavingthrow BAND 0x00000010) > 0 BEGIN
					thesavingthrow&=0xFFFFFFEF
					thesavingthrow|=0x1000
				END
				WRITE_SHORT offset 500
				WRITE_LONG (offset + 0x4) (theparameter1 + (thedicesize << 8) + (thedicenumber << 16))
				PATCH_IF thetiming = 1 OR thetiming = 9 BEGIN
					WRITE_BYTE (offset + 0xC) 0
					WRITE_LONG (offset + 0xE) 0
				END ELSE PATCH_IF thetiming = 3 OR thetiming = 4 BEGIN
					WRITE_BYTE (offset + 0xC) 3
				END
				WRITE_ASCII (offset + 0x14) ~EXDAMAGE~ #8
				WRITE_LONG (offset + 0x1C) 0
				WRITE_LONG (offset + 0x20) 0
				WRITE_LONG (offset + 0x24) thesavingthrow
			END
			offset = offset + 0x30
		END
	END
	BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING_REGEXP ~.*\.spl~ ~override~
	READ_LONG 0x18 thespellflags
	READ_LONG 0x64 headeroffset
	READ_SHORT 0x68 numheaders
	READ_LONG 0x6A effectoffset
	READ_SHORT (headeroffset + 0x26) theprojectile
	READ_SHORT (headeroffset + 0x28 * (numheaders - 1) + 0x1E) lastheadernumeffects
	READ_SHORT (headeroffset + 0x28 * (numheaders - 1) + 0x20) lastheaderfirsteffectindex
	numeffects = lastheadernumeffects + lastheaderfirsteffectindex
	offset = effectoffset
	doaddeffect = 0
	FOR (i = 0; i < numeffects; ++i) BEGIN
		READ_SHORT offset theopcode
		PATCH_IF theopcode = 111 BEGIN
			doaddeffect = 1
		END
		offset = offset + 0x30
	END
	PATCH_IF doaddeffect = 1 BEGIN
		LPF CLONE_EFFECT INT_VAR match_opcode=111 opcode=500 STR_VAR resource=~MEOFFANI~ insert=~below~ END
	END
	UNLESS ~MEOFFANI~
	BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING_REGEXP ~..BOWS..\.itm~ ~override~ ~..BOWP..\.itm~ ~override~ ~..BWLX..\.itm~ ~override~ ~..SLNG..\.itm~ ~override~ ~..HFBS..\.itm~ ~override~ ~..HFBP..\.itm~ ~override~ ~..HFLX..\.itm~ ~override~ ~..HFSG..\.itm~ ~override~
	READ_SHORT 0x68 thenumheaders
	READ_SHORT 0x1C theitemtype
	PATCH_IF thenumheaders > 0 AND (theitemtype = 15 OR theitemtype = 18 OR theitemtype = 27) BEGIN
		LPF ADD_ITEM_EQEFFECT INT_VAR opcode=288 target=1 timing=2 parameter1=1 parameter2=192 savingthrow=0x10000 STR_VAR resource=~USSNEAKX~ END
	END
	IF_EXISTS
	UNLESS ~USSNEAKX~
	BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING_REGEXP ~.*\.itm~ ~override~
	ismelee = 0
	isranged = 0
	islauncher = 0
	READ_SHORT 0x18 theitemflags
	READ_SHORT 0x1C thecategory
	READ_ASCII 0x22 theappearance (2)
	READ_SHORT 0x22 theappearancenumber
	PATCH_IF (~%theappearance%~ STRING_EQUAL_CASE ~2A~) OR (~%theappearance%~ STRING_EQUAL_CASE ~3A~) OR (~%theappearance%~ STRING_EQUAL_CASE ~4A~) BEGIN
		LPF ADD_ITEM_EQEFFECT INT_VAR opcode=288 target=1 timing=2 parameter1=thecategory parameter2=241 savingthrow=(theitemflags << 16) special=1 STR_VAR resource=~USEQTYPE~ END
	END ELSE PATCH_IF thecategory = 67 BEGIN
		LPF ADD_ITEM_EQEFFECT INT_VAR opcode=288 target=1 timing=2 parameter1=thecategory parameter2=241 savingthrow=(theitemflags << 16) special=2 STR_VAR resource=~USEQTYPE~ END
	END ELSE PATCH_IF (~%theappearance%~ STRING_EQUAL_CASE ~D1~) OR (~%theappearance%~ STRING_EQUAL_CASE ~D2~) OR (~%theappearance%~ STRING_EQUAL_CASE ~D3~) OR (~%theappearance%~ STRING_EQUAL_CASE ~D4~) OR (~%theappearance%~ STRING_EQUAL_CASE ~C6~) BEGIN
		LPF ADD_ITEM_EQEFFECT INT_VAR opcode=288 target=1 timing=2 parameter1=thecategory parameter2=241 savingthrow=(theitemflags << 16) special=3 STR_VAR resource=~USEQTYPE~ END
	END ELSE BEGIN
		READ_SHORT 0x68 thenumheaders
		PATCH_IF thenumheaders > 0 BEGIN
			offset = 0x82
			FOR (i = 0; i < thenumheaders; ++i) BEGIN
				READ_BYTE offset theheadertype
				PATCH_IF theheadertype = 1 AND isranged = 0 BEGIN
					ismelee = 1
					READ_SHORT (offset + 0x18) thedicenumber
					READ_SHORT (offset + 0x1C) thedamagetype
					PATCH_IF thedicenumber = 0 BEGIN
						thedamagetype = 0
					END
				END ELSE PATCH_IF theheadertype = 2 BEGIN
					isranged = 1
					READ_SHORT (offset + 0x18) thedicenumber
					READ_SHORT (offset + 0x1C) thedamagetype
					PATCH_IF thedicenumber = 0 BEGIN
						thedamagetype = 0
					END
				END ELSE PATCH_IF theheadertype = 4 BEGIN
					islauncher = 1
					READ_SHORT (offset + 0x18) thedicenumber
					READ_SHORT (offset + 0x1C) thedamagetype
					PATCH_IF thedicenumber = 0 BEGIN
						thedamagetype = 0
					END
				END
				offset += 0x38
			END
			PATCH_IF isranged = 1 BEGIN
				LPF ADD_ITEM_EQEFFECT INT_VAR opcode=288 target=1 timing=2 parameter1=thecategory parameter2=241 savingthrow=(theitemflags << 16) special=4 STR_VAR resource=~USEQTYPE~ END
			END ELSE PATCH_IF ismelee = 1 BEGIN
				PATCH_IF theappearancenumber = 0 OR theappearancenumber = 0x2020 BEGIN
					LPF ADD_ITEM_EQEFFECT INT_VAR opcode=288 target=1 timing=2 parameter1=thecategory parameter2=241 savingthrow=(theitemflags << 16) special=6 STR_VAR resource=~USEQTYPE~ END
				END ELSE BEGIN
					LPF ADD_ITEM_EQEFFECT INT_VAR opcode=288 target=1 timing=2 parameter1=thecategory parameter2=241 savingthrow=(theitemflags << 16) special=5 STR_VAR resource=~USEQTYPE~ END
				END
			END ELSE PATCH_IF islauncher = 1 BEGIN
				LPF ADD_ITEM_EQEFFECT INT_VAR opcode=288 target=1 timing=2 parameter1=thecategory parameter2=241 savingthrow=(theitemflags << 16) special=7 STR_VAR resource=~USEQTYPE~ END
			END
		END
	END
	PATCH_IF (((theitemflags BAND 0x00000002) = 0x00000002) AND ismelee = 1 AND theappearancenumber != 0 AND theappearancenumber != 0x2020) OR thecategory = 41 OR thecategory = 47 OR thecategory = 49 OR thecategory = 53 BEGIN
		LPF ADD_ITEM_EQEFFECT INT_VAR opcode=500 target=1 timing=0 special=1 STR_VAR resource=~MEMONKAN~ END
	END
	UNLESS ~USEQTYPE~
	BUT_ONLY_IF_IT_CHANGES
/*
COPY_EXISTING_REGEXP ~.*\.itm~ ~override~
	isweapon = 0
	READ_SHORT 0x68 thenumheaders
	PATCH_IF thenumheaders > 0 BEGIN
		offset = 0x82
		FOR (i = 0; i < thenumheaders; ++i) BEGIN
			READ_BYTE offset theheadertype
			PATCH_IF theheadertype = 1 OR theheadertype = 2 BEGIN
				isweapon = 1
			END
			offset += 0x38
		END
		PATCH_IF isweapon = 1 BEGIN
			LPF ADD_ITEM_EQEFFECT INT_VAR opcode=434 target=1 timing=2 parameter1=1 STR_VAR resource=~USREPERM~ END
		END
	END
	UNLESS ~USREPERM~
	BUT_ONLY_IF_IT_CHANGES
*/
COPY_EXISTING_REGEXP ~.*\.itm~ ~override~
	isweapon = 0
	READ_SHORT 0x68 thenumheaders
	PATCH_IF thenumheaders > 0 BEGIN
		offset = 0x82
		FOR (i = 0; i < thenumheaders; ++i) BEGIN
			READ_BYTE offset theheadertype
			PATCH_IF theheadertype = 1 OR theheadertype = 2 BEGIN
				isweapon = 1
			END
			offset += 0x38
		END
		PATCH_IF isweapon = 1 BEGIN
			LPF ADD_ITEM_EQEFFECT INT_VAR opcode=287 target=1 timing=2 STR_VAR resource=~USNONSNA~ END
		END
	END
	UNLESS ~USNONSNA~
	BUT_ONLY_IF_IT_CHANGES

STRING_SET 24899 @899
STRING_SET 25053 @899

COPY_EXISTING_REGEXP ~.*\.cre~ ~override~
	WRITE_SHORT 0x184 0
	WRITE_SHORT 0x186 0
	WRITE_SHORT 0x188 (0 - 2)
	WRITE_BYTE 0x197 0
	WRITE_LONG 0x198 0
	WRITE_LONG 0x1A0 0
	WRITE_LONG 0x1A4 0
	BUT_ONLY_IF_IT_CHANGES

COPY + ~Characters~ ~Characters~
	PATCH_IF ~%SOURCE_EXT%~ STRING_EQUAL_CASE ~CHR~ BEGIN
		WRITE_SHORT 0x3A8 0
		WRITE_SHORT 0x3AA 0
		WRITE_SHORT 0x3AC (0 - 2)
		WRITE_BYTE 0x3BB 0
		WRITE_LONG 0x3BC 0
		WRITE_LONG 0x3C4 0
		READ_SLONG 0x3C8 theextraflags
		PATCH_IF theextraflags = (0 - 1) BEGIN
			WRITE_LONG 0x3C8 0
		END
	END
	BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING_REGEXP ~.*\.cre~ ~override~
	READ_BYTE race therace
	READ_BYTE subrace thesubrace
	READ_BYTE alignment thealignment
	READ_BYTE levelcleric theclericlevel
	READ_LONG kit thekit
	READ_LONG animation theanimation
	PATCH_IF (theanimation = 59337 OR theanimation = 60184 OR theanimation = 60217 OR theanimation = 60233 OR theanimation = 60681 OR theanimation = 60712 OR theanimation = 61197 OR theanimation = 61213) OR therace = 168 OR therace = 182 OR therace = 183 OR therace = 184 OR therace = 185 OR (theclericlevel > 0 AND (thekit BAND 0x00200000) = 0x00200000) BEGIN
		READ_LONG extraflags theextraflags
		theextraflags|=0x200000
		WRITE_LONG extraflags theextraflags
	END
	BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING_REGEXP ~53ELDERB.cre~ ~override~ ~53IMPHRA.cre~ ~override~ ~53MAJRAS.cre~ ~override~ ~53MIRABE.cre~ ~override~ ~6[27]REDWI.*\.cre~ ~override~ ~62SAABL.*\.cre~ ~override~ ~63BUVAI.cre~ ~override~ ~63FYNNE.cre~ ~override~ ~63TASHA.cre~ ~override~ ~63VESE.cre~ ~override~ ~63THAYM.*\.cre~ ~override~
	READ_LONG extraflags theextraflags
	theextraflags|=0x200000
	WRITE_LONG extraflags theextraflags

COPY_EXISTING ~USSIMULA.cre~ ~override~
	WRITE_LONG 0x1A4 0x400000
	IF_EXISTS
	BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING_REGEXP ~.*\.cre~ ~override~
	READ_LONG animation theanimation
	PATCH_IF theanimation = 61296 AND NOT (~%SOURCE_RES%~ STRING_EQUAL_CASE ~USERUPTC~) BEGIN
		WRITE_LONG animation 61280
	END
	BUT_ONLY_IF_IT_CHANGES

ACTION_IF MOD_IS_INSTALLED ~iwd2ee.tp2~ ~0~ BEGIN

COPY_EXISTING_REGEXP ~sppr[0-9][0-9][0-9]\.spl~ ~override~ ~spwi[0-9][0-9][0-9]\.spl~ ~override~ ~uspr[0-9][0-9][0-9]\.spl~ ~override~ ~uswi[0-9][0-9][0-9]\.spl~ ~override~
	LPF ADD_SPELL_CFEFFECT INT_VAR insert_point=0 opcode=500 target=1 timing=0 STR_VAR resource=~EXMETALV~ END
	IF_EXISTS
	UNLESS ~EXMETALV~

COPY_EXISTING_REGEXP ~sppr[0-9][0-9][0-9]\.spl~ ~override~ ~spwi[0-9][0-9][0-9]\.spl~ ~override~ ~uspr[0-9][0-9][0-9]\.spl~ ~override~ ~uswi[0-9][0-9][0-9]\.spl~ ~override~
	READ_BYTE 0x8E thetarget
	READ_SHORT 0xA8 theprojectile
	PATCH_IF thetarget = 5 AND (theprojectile = 1 OR theprojectile = 66) BEGIN
		LPF ALTER_EFFECT INT_VAR silent=1 check_headers=1 check_globals=0 match_target=1 target=2 END
	END
	IF_EXISTS
	BUT_ONLY_IF_IT_CHANGES

END

COPY_EXISTING ~LISTINNT.2da~ ~override~ ~LISTSHAP.2da~ ~override~
	COUNT_2DA_COLS numcolumns
	COUNT_2DA_ROWS numcolumns numrows
	FOR (i = 1; i < numrows; ++i) BEGIN
		READ_2DA_ENTRY i 1 numcolumns spell_res_ref
		PATCH_IF (FILE_EXISTS_IN_GAME ~%spell_res_ref%.spl~) BEGIN
			INNER_ACTION BEGIN
				COPY_EXISTING ~%spell_res_ref%.spl~ ~override~
					READ_SHORT 0x94 thecastingtime ELSE 0
					LPF ADD_SPELL_CFEFFECT INT_VAR insert_point=0 opcode=500 target=1 timing=0 special=thecastingtime STR_VAR resource=~MEONCAST~ END
					READ_LONG 0x6A effectoffset
					WRITE_ASCIIE (effectoffset + 0x4) ~%SOURCE_RES%~ #8
					UNLESS ~MEONCAST~
			END
		END
	END