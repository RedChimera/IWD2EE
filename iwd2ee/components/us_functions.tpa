DEFINE_PATCH_FUNCTION ~ALTER_AREA_REGION_IWD2~
	INT_VAR
		type=~-1~
		cursor=~-1~
		trap_detect=~-1~
		trap_remove=~-1~
		trapped=~-1~
		detected=~-1~
		all_flags=~-1~
		flag_locked=~-1~
		flag_resets=~-1~
		flag_party_required=~-1~
		flag_trap_detectable=~-1~
		flag_trap_enemies=~-1~
		flag_tutorial=~-1~
		flag_trap_npcs=~-1~
		flag_silent=~-1~
		flag_deactivated=~-1~
		flag_impassable_npc=~-1~
		flag_activation_point=~-1~
		flag_connect_to_door=~-1~
		bounding_left=~-1~
		bounding_top=~-1~
		bounding_right=~-1~
		bounding_bottom=~-1~
		info_point=99999999
		launch_x=~-1~
		launch_y=~-1~
		activate_x=~-1~
		activate_y=~-1~
		alternate_x=~-1~
		alternate_y=~-1~
	STR_VAR
		region_name=~~
		destination_area=~same~
		entrance_name=~same~
		region_key=~same~
		region_script=~same~
BEGIN
	SET region_name_length = (STRING_LENGTH ~%region_name%~)
		PATCH_IF (region_name_length = 0) BEGIN
			PATCH_FAIL ~No region name given for function ALTER_AREA_REGION_IWD2 ~
		END
	SET region_found = 0
	READ_SHORT 0x6a regionnumber
	READ_LONG 0x6c regionoffset
	FOR (i = 0; i < regionnumber; ++i) BEGIN
		SET offset = regionoffset + (i * regionsize)
		READ_ASCII offset name_of_region (region_name_length)
		PATCH_IF (~%name_of_region%~ STRING_EQUAL_CASE ~%region_name%~) BEGIN
			region_found = 1
			PATCH_IF (type != (0 - 1)) BEGIN
				WRITE_SHORT (offset + 0x20) type
			END
			PATCH_IF (bounding_left != (0 - 1)) BEGIN
				WRITE_SHORT (offset + 0x22) bounding_left
			END
			PATCH_IF (bounding_top != (0 - 1)) BEGIN
				WRITE_SHORT (offset + 0x24) bounding_top
			END
			PATCH_IF (bounding_right != (0 - 1)) BEGIN
				WRITE_SHORT (offset + 0x26) bounding_right
			END
			PATCH_IF (bounding_bottom != (0 - 1)) BEGIN
				WRITE_SHORT (offset + 0x28) bounding_bottom
			END
			PATCH_IF (cursor != (0 - 1)) BEGIN
				WRITE_LONG (offset + 0x34) cursor
			END
			PATCH_IF (!(~%destination_area%~ STRING_EQUAL ~same~)) BEGIN
				WRITE_ASCIIE (offset + 0x38) ~%destination_area%~ #8
			END
			PATCH_IF (!(~%entrance_name%~ STRING_EQUAL ~same~)) BEGIN
				WRITE_ASCIIE (offset + 0x40) ~%entrance_name%~ #32
			END
			PATCH_IF (info_point != 99999999) BEGIN
				WRITE_LONG (offset + 0x64) info_point
			END
			PATCH_IF (trap_detect != (0 - 1)) BEGIN
				WRITE_SHORT (offset + 0x68) trap_detect
			END
			PATCH_IF (trap_remove != (0 - 1)) BEGIN
				WRITE_SHORT (offset + 0x6a) trap_remove
			END
			PATCH_IF (trapped != (0 - 1)) BEGIN
				WRITE_SHORT (offset + 0x6c) trapped
			END
			PATCH_IF (detected != (0 - 1)) BEGIN
				WRITE_SHORT (offset + 0x6e) detected
			END
			PATCH_IF (launch_x != (0 - 1)) BEGIN
				WRITE_SHORT (offset + 0x70) launch_x
			END
			PATCH_IF (launch_y != (0 - 1)) BEGIN
				WRITE_SHORT (offset + 0x72) launch_y
			END
			PATCH_IF (!(~%region_key%~ STRING_EQUAL ~same~)) BEGIN
				WRITE_ASCIIE (offset + 0x74) ~%region_key%~ #8
			END
			PATCH_IF (!(~%region_script%~ STRING_EQUAL ~same~)) BEGIN
				WRITE_ASCIIE (offset + 0x7c) ~%region_script%~ #8
			END
			PATCH_IF (activate_x != (0 - 1)) BEGIN
				WRITE_SHORT (offset + 0x84) activate_x
			END
			PATCH_IF (activate_y != (0 - 1)) BEGIN
				WRITE_SHORT (offset + 0x86) activate_y
			END
			PATCH_IF (alternate_x != (0 - 1)) BEGIN
				WRITE_LONG (offset + 0x88) alternate_x
			END
			PATCH_IF (alternate_y != (0 - 1)) BEGIN
				WRITE_LONG (offset + 0x9c) alternate_y
			END
			PATCH_IF (all_flags != (0 - 1)) BEGIN
				WRITE_LONG (offset + 0x60) all_flags
			END
			i = regionnumber
		END
	END
	PATCH_IF (region_found = 0) BEGIN
		PATCH_WARN ~No region called %region_name% was found.~
	END

END