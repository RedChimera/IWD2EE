
DEFINE_PATCH_FUNCTION B3_CHU_FIND_PANEL
	INT_VAR
		panel_id = "-1"
	RET
		panel_address
BEGIN
	panel_address = "-1"
	READ_LONG 0x8 num_panels
	READ_LONG 0x10 current_offset
	FOR (i = 0; i < num_panels; ++i) BEGIN
		READ_SHORT current_offset check_id
		PATCH_IF check_id == panel_id BEGIN
			i = num_panels
			panel_address = current_offset
		END
		current_offset += 0x1C
	END
END

DEFINE_PATCH_FUNCTION B3_CHU_FIND_CONTROL
	INT_VAR
		panel_address = "-1"
		panel_id = "-1"
		control_id = "-1"
	RET
		control_address
BEGIN
	control_address = "-1"
	PATCH_IF panel_address == "-1" BEGIN
		LPF B3_CHU_FIND_PANEL INT_VAR panel_id RET panel_address END
	END
	READ_SHORT (panel_address + 0xE) panel_num_controls
	READ_SHORT (panel_address + 0x18) first_control_index
	READ_LONG 0xC current_listing_address
	current_listing_address = current_listing_address + (first_control_index * 0x8)
	FOR (i = 0; i < panel_num_controls; ++i) BEGIN
		READ_LONG current_listing_address current_control_address
		READ_SHORT current_control_address control_id_check
		PATCH_IF control_id_check == control_id BEGIN
			i = panel_num_controls
			control_address = current_control_address
		END
		current_listing_address += 0x8
	END
END

DEFINE_PATCH_FUNCTION B3_CHU_COUNT_CONTROLS
	RET
		num_controls
BEGIN
	num_controls = 0
	READ_LONG 0x8 num_panels
	READ_LONG 0x10 current_offset
	FOR (i = 0; i < num_panels; ++i) BEGIN
		READ_SHORT (current_offset + 0xE) num_panel_controls
		num_controls += num_panel_controls
		current_offset += 0x1C
	END
END

DEFINE_PATCH_FUNCTION B3_CHU_GET_META
	RET
		num_panels
		max_panel_id
		after_panels_address
		num_controls
BEGIN
	num_controls = 0
	max_panel_id = 0
	READ_LONG 0x8 num_panels
	READ_LONG 0x10 current_offset
	FOR (i = 0; i < num_panels; ++i) BEGIN
		READ_SHORT current_offset panel_id
		PATCH_IF panel_id > max_panel_id BEGIN
			max_panel_id = panel_id
		END
		READ_SHORT (current_offset + 0xE) num_panel_controls
		num_controls += num_panel_controls
		current_offset += 0x1C
	END
	after_panels_address = current_offset
END

DEFINE_PATCH_FUNCTION B3_CHU_ADD_PANEL
	RET
		panel_id
		panel_address
BEGIN

	LPF B3_CHU_GET_META RET num_panels max_panel_id panel_address = after_panels_address num_controls END

	// Update "# panels" and insert new panel's bytes
	WRITE_LONG 0x8 (num_panels + 1)
	INSERT_BYTES panel_address 0x1C

	// Set new panel's "Panel ID"
	panel_id = max_panel_id + 1
	WRITE_SHORT panel_address panel_id

	// Set new panel's "First control index"
	WRITE_SHORT (panel_address + 0x18) num_controls

	// Update "Controls offset"
	READ_LONG 0xC current_offset
	current_offset += 0x1C
	WRITE_LONG 0xC current_offset

	// Update every control's "Offset"
	FOR (i = 0; i < num_controls; ++i) BEGIN
		READ_LONG current_offset control_offset
		WRITE_LONG current_offset control_offset + 0x1C
		current_offset += 0x8
	END
END

ACTION_DEFINE_ASSOCIATIVE_ARRAY b3_chu_control_type_to_length BEGIN
	0 => 0x20
	1 => 0xE
	2 => 0x34
	3 => 0x6A
	4 => 0xE
	5 => 0x2E
	6 => 0x24
	7 => 0x28
END

DEFINE_PATCH_FUNCTION B3_CHU_ADD_CONTROL
	INT_VAR
		panel_address = "-1"
		panel_id = "-1"
		control_id = "-1"
		control_type = 0
	RET
		control_address
		control_length
BEGIN

	// Fill panel_address
	PATCH_IF panel_address == "-1" BEGIN
		LPF B3_CHU_FIND_PANEL INT_VAR panel_id RET panel_address END
	END

	LPF B3_CHU_COUNT_CONTROLS RET num_controls END

	// Update "# controls"
	num_controls_address = panel_address + 0xE
	READ_SHORT num_controls_address panel_num_controls
	WRITE_SHORT num_controls_address (panel_num_controls + 1)

	// Update every panel's "First control index"
	READ_SHORT (panel_address + 0x18) first_control_index
	READ_LONG 0x8 num_panels
	READ_LONG 0x10 current_offset

	FOR (i = 0; i < num_panels; ++i) BEGIN
		first_control_index_update_address = current_offset + 0x18
		READ_SHORT first_control_index_update_address first_control_index_update
		PATCH_IF first_control_index_update > first_control_index BEGIN
			WRITE_SHORT first_control_index_update_address (first_control_index_update + 1)
		END
		current_offset += 0x1C
	END

	READ_LONG 0xC current_control_offset

	// Update every control's "Offset"
	FOR (i = 0; i < num_controls; ++i) BEGIN
		READ_LONG current_control_offset control_offset
		WRITE_LONG current_control_offset control_offset + 0x8
		current_control_offset += 0x8
	END

	// Create control listing
	READ_LONG 0xC controls_start
	control_listing_address = controls_start + (first_control_index + panel_num_controls) * 0x8
	INSERT_BYTES control_listing_address 0x8

	// Create control data + link control listing to data
	// Note: Assumes CHU file stores control data at end of file
	control_address = BUFFER_LENGTH
	control_length = $b3_chu_control_type_to_length(~%control_type%~)

	WRITE_LONG control_listing_address control_address
	WRITE_LONG (control_listing_address + 0x4) control_length

	INSERT_BYTES control_address control_length
	WRITE_SHORT control_address control_id
END

DEFINE_PATCH_FUNCTION B3_CHU_COPY_CONTROL
	INT_VAR
		copy_panel_address = "-1"
		copy_panel_id = "-1"
		copy_control_id = "-1"

		target_panel_address = "-1"
		target_panel_id = "-1"

		target_control_id = "-1"
	RET
		control_address
BEGIN

	// Fill copy_panel_address
	PATCH_IF copy_panel_address == "-1" BEGIN
		LPF B3_CHU_FIND_PANEL INT_VAR panel_id = copy_panel_id RET copy_panel_address = panel_address END
	END

	// Fill target_panel_address
	PATCH_IF target_panel_address == "-1" BEGIN
		LPF B3_CHU_FIND_PANEL INT_VAR panel_id = target_panel_id RET target_panel_address = panel_address END
	END

	// Fill copy_control_address
	LPF B3_CHU_FIND_CONTROL INT_VAR panel_address = copy_panel_address control_id = copy_control_id RET copy_control_address = control_address END

	// Add control
	READ_BYTE (copy_control_address + 0xC) copy_type
	LPF B3_CHU_ADD_CONTROL INT_VAR panel_address = target_panel_address control_id = target_control_id control_type = copy_type RET control_address control_length END

	// copy_control_address increased by 0x8 due to B3_CHU_ADD_CONTROL
	current_copy_address = copy_control_address + 0xC
	current_target_address = control_address + 0x4

	FOR (i = 4; i < control_length; ++i) BEGIN
		READ_BYTE current_copy_address copy_byte
		WRITE_BYTE current_target_address copy_byte
		++current_copy_address
		++current_target_address
	END
END

DEFINE_PATCH_FUNCTION B3_CHU_INSTALL_QUICKLOOT BEGIN

	LPF B3_CHU_ADD_PANEL RET new_panel = panel_address END
	LPF B3_CHU_FIND_PANEL INT_VAR panel_id = 1 RET panel1 = panel_address END
	LPF B3_CHU_FIND_PANEL INT_VAR panel_id = 8 RET panel8 = panel_address END

	READ_SHORT (panel1 + 0x4) copy_x
	READ_SHORT (panel1 + 0x6) y_top
	READ_SHORT (panel1 + 0x8) copy_w
	READ_SHORT (panel1 + 0xA) copy_h
	READ_ASCII (panel1 + 0x10) copy_background (8)

	WRITE_SHORT (new_panel + 0x4) copy_x
	WRITE_SHORT (new_panel + 0x6) (y_top - copy_h)
	WRITE_SHORT (new_panel + 0x8) copy_w
	WRITE_SHORT (new_panel + 0xA) copy_h
	WRITE_SHORT (new_panel + 0xC) 1
	WRITE_EVALUATED_ASCII (new_panel + 0x10) ~%copy_background%~ (8)

	target_id = 0
	FOR (i = 7; i <= 16; ++i) BEGIN

		LPF B3_CHU_FIND_CONTROL INT_VAR panel_address = panel1 control_id = i RET copy_location_control = control_address END
		READ_SHORT (copy_location_control + 0x4) x
		READ_SHORT (copy_location_control + 0x6) y

		LPF B3_CHU_COPY_CONTROL INT_VAR copy_panel_address = panel8 copy_control_id = target_id target_panel_address = new_panel target_control_id = target_id RET target_control = control_address END
		WRITE_SHORT (target_control + 0x4) (x + 1)
		WRITE_SHORT (target_control + 0x6) (y + 1)

		++target_id
	END

	LPF B3_CHU_COPY_CONTROL INT_VAR copy_panel_address = panel1 copy_control_id = 6 target_panel_address = new_panel target_control_id = 10 RET arrow_left = control_address END
	WRITE_ASCII (arrow_left + 0xE) ~GUIBTACT~ (8)
	WRITE_BYTE (arrow_left + 0x18) 48
	WRITE_BYTE (arrow_left + 0x1A) 49

	LPF B3_CHU_COPY_CONTROL INT_VAR copy_panel_address = panel1 copy_control_id = 17 target_panel_address = new_panel target_control_id = 11 RET arrow_right = control_address END
	WRITE_ASCII (arrow_right + 0xE) ~GUIBTACT~ (8)
	WRITE_BYTE (arrow_right + 0x18) 52
	WRITE_BYTE (arrow_right + 0x1A) 53
END

// Fix: These buttons somehow got incorrect press-frames in vanilla
COPY_EXISTING ~GUIW08.CHU~ ~override~
	LPF B3_CHU_FIND_PANEL INT_VAR panel_id = 8 RET panel8 = panel_address END
	FOR (i = 6; i <= 9; ++i) BEGIN
		LPF B3_CHU_FIND_CONTROL INT_VAR panel_address = panel8 control_id = i RET fix_control = control_address END
		WRITE_BYTE (fix_control + 0x1A) 0
	END
IF_EXISTS

COPY_EXISTING ~GUIW08.CHU~ ~override~ LPF B3_CHU_INSTALL_QUICKLOOT END IF_EXISTS
COPY_EXISTING ~GUIW10.CHU~ ~override~ LPF B3_CHU_INSTALL_QUICKLOOT END IF_EXISTS
